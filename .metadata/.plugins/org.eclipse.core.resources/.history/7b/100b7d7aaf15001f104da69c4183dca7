/*
 *  text_mode_vga.h
 *	Minimal driver for text mode VGA support, ECE 385 Summer 2021 Lab 6
 *  You may wish to extend this driver for your final project/extra credit project
 * 
 *  Created on: Jul 17, 2021
 *      Author: zuofu
 */

#ifndef TEXT_MODE_VGA_COLOR_H_
#define TEXT_MODE_VGA_COLOR_H_

#define COLUMNS 80
#define ROWS 30
#define HORIZONTAL_MOVE 6
#define VERTICAL_MOVE 2
#define LIFE__POS_X 200
#define LIFE_POS_Y 100
#define CHAR_POS_INIT_X 128
#define CHAR_POS_INIT_Y 256

#include <system.h>
#include <alt_types.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

struct SPRITE_INFO {
	alt_u32 VRAM [8];
};

struct CHAR{
	int x;
	int y;
	int state;
};

static enum LifeStatusIndex {
	life5 = 1,
	life4 = 2,
	life3 = 3,
	life2 = 4,
	life1 = 5,
	life0 = 6,
};

static enum CharStatusIndex{
	char_still_r = 10,
	char_still_1,
	char_r1,
	char_r2,
	char_r3,
	char_l1,
	char_l2,
	char_l3,
};


//you may have to change this line depending on your platform designer
static volatile struct SPRITE_INFO* vga_ctrl = SPRITERAM_AVL_INTERFACE_0_BASE;

static struct CHAR my_char = {.x = CHAR_POS_INIT_X, .y = CHAR_POS_INIT_Y, .state = char_still_r};

// void test_init();
// void test01();
// void test02(int keycode);


void game_init();
void game_run(int keycode);

#endif /* TEXT_MODE_VGA_COLOR_H_ */
